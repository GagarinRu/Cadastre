**Описание задания:**

1.Написать проект, который принимает запрос с указанием кадастрового номера,
широты и долготы, эмулирует отправку запроса на внешний сервер, который
может обрабатывать запрос до 60 секунд. Затем должен отдавать результат 
запроса. Считается, что внешний сервер может ответить `true` или `false`.

2.Данные запроса на сервер и ответ с внешнего сервера должны быть сохранены
в БД. Нужно написать АПИ для получения истории всех запросов/истории по 
кадастровому номеру.

3.Сервис должен содержать следующие эндпоинты:
"/query" - принимает кадастровый номер
"/ping" - проверка, что  сервер запустился
"/history" - для получения истории запросов
"/result" - эндпоинт эмулируемоего сервера, который возвращает `true` или `false`

4.Сервис завернуть в Dockerfile.

**Реализованный стэк**

- Python
- FastAPI (async роуты)
- PostgreSQL
- SQLAlchemy (async запросы)
- Alembic
- Docker
- Docker Compose


**Для запуска проекта:**

*1.Склонировать проект с репозитория на GitHub:*

*2.Создать .env - файл (Образец: env.Example)*

*3.Создать в Docker образы и развернуть:*

docker compose -f docker-compose.yml build

docker compose -f docker-compose.yml up -d

*4.Сделать миграцию для базы данных: *

docker compose -f docker-compose.yml exec app alembic upgrade head

**Сервисы:**

http://127.0.0.1:8000/docs - работа с эндпоинтами проекта

http://127.0.0.1:8000/admin - админ-панель проекта

### Автор
Evgeny Kudryashov: https://github.com/GagarinRu
